# Hierarchy:
#  Server
#  └─Session
#    └─Window
#      └─Pane

# OPtions:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# -------------------------------------------------------------------
# Server options
# -------------------------------------------------------------------
# See if this fixes slow ESC issues.
# http://unix.stackexchange.com/questions/23138/esc-key-causes-a-small-delay-in-terminal-due-to-its-alt-behavior
set -s escape-time 0

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# Change bind key to ctrl-a
unbind-key C-b
set-option -g prefix C-a

# Start window and pane indices at 1.
set-option -g base-index 1
set-option -g pane-base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# History
set-option -g history-limit 102400

# Repeat time limit (ms)
set-option -g repeat-time 500

# Use screen-256color
set-option -s default-terminal 'screen-256color'

# Default mouse-mode
set-option -g mouse on

# Unbork my iTerm ctrl+1 etc mappings in tmux 2.1
# https://github.com/tmux/tmux/issues/159
set-option -g assume-paste-time 0

# Enable True Color
# TODO Use Tc before tmux 2.7, use RGB after tmux 2.7
# TODO This assume terminal outside of tmux is 'xterm', 'xterm-256color',
# 'screen', 'screen-256color'. Make it cover all terminal type
# TODO Retain original terminal for terminal emulators that do not support true color?
set-option -s  terminal-overrides 'xterm*:Tc'
set-option -sa terminal-overrides ',xterm:Tc'
set-option -sa terminal-overrides ',screen*:Tc'
set-option -sa terminal-overrides ',screen:Tc'

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# Use vim keybindings in copy mode
setw -g mode-keys vi

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# Repeat prefix to send prefix
bind-key C-a send-prefix

# Capture pane and save to ~/tmux.history (in the home directory of user that execute tmux)
bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S - ; save-buffer %1 ; delete-buffer'

# pane movement
bind-key J command-prompt -p "join pane from:" "join-pane -s ':%%'"
bind-key S command-prompt -p "send pane to:" "join-pane -t ':%%'"

# Moving windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-

# Highlight the active window in the status bar.
set-window-option -g window-status-current-bg yellow
set-window-option -g window-status-current-fg black

# Don't prompt to kill panes/windows.
bind-key x kill-pane
bind-key & kill-window

# Pane-movement.
bind-key h select-pane -L
bind-key l select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U
bind-key tab select-pane -t :.+
bind-key btab select-pane -t :.-

# Select last window
# tmux can only use single quote, need to escape awk variable
bind-key g run-shell 'last_window_index=$(tmux list-windows | tail -1 | awk -F ":" "{ print \$1 }"); tmux select-window -t :=${last_window_index}'

# Last window
bind-key "'" last-window

# Window movement
bind-key '"' command-prompt -p index "select-window -t ':%%'"

# More intuitive split-window mappings.
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# Synchronize panes
bind-key * set-window-option synchronize-pane

# Maximize pane, e.g. for copying.
bind-key z resize-pane -Z

# Switch pane and zoom
# https://twitter.com/tskogberg/status/792025881573199872
bind-key C-z select-pane -t :.+ \; resize-pane -Z

# Reload tmux conf.
unbind-key r
bind-key r source-file ~/.tmux.conf\; display "Reloaded conf."

# List panes information
bind-key C-q list-panes -a -F "#{pane_pid} #{session_name}:#{window_index}.#{pane_index}"

# copy-mode
# http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v     send -X begin-selection
bind-key -T copy-mode-vi C-v   send -X rectangle-toggle
bind-key -T copy-mode-vi y     send -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Enter send -X copy-selection-and-cancel

# Capture pane and open in Vim
bind-key C-c run-shell 'FILE=/tmp/tmux-capture-$(date +%Y%m%d%H%M%S).txt; tmux capture-pane -J -S -102400 -p > $FILE; tmux new-window "$EDITOR $FILE"'

# Clear scrollback buffer
bind-key C-l send-keys C-l \; clear-history

# Switch to last background process
# require fgl to work
bind-key b run-shell 'tmux send-keys C-z; sleep 0.1; tmux send-keys fgl Enter'

# Switch to background processes using fzf
# require ffg to work
bind-key B run-shell 'tmux send-keys C-z; sleep 0.1; tmux send-keys ffg Enter'

# Workaround for issue that 'C-g C-h' cannot be send to terminal inside tmux
# BSpace == 'C-h'
bind-key BSpace send-keys C-g C-h

# -------------------------------------------------------------------
# Decoration (256-color)
# -------------------------------------------------------------------
# Status bar styling and content.
set-option -g status-bg black
set-option -g status-fg white
set-option -g status-left '#S '

# Show keyboard layout in prompt, assuming some script writes it to that path;
# it's "/User/…" instead of "~" so VMs can read from their symlinked OS X host home directory.
set-option -g status-right '#(cat /Users/$USER/.keyboard_layout 2> /dev/null) | #22T | #{t:window_activity}'
set-option -g status-right-length 60
set-option -g status-interval 60

# Use tmux-gruvbox-dark colorscheme instead

# window titles
# set-window-option -g window-status-current-format ' #[fg=white]** #[fg=white,bold][#{window_index}] #[fg=green]#{pane_current_command} #[fg=cyan]#(pwd="#{pane_current_path}"; echo ${pwd####*/}) #[fg=white]**'
# set-window-option -g window-status-format '#[fg=colour244,bold][#{window_index}] #[fg=colour244]#{pane_current_command} #[fg=colour244]#(pwd="#{pane_current_path}"; echo ${pwd####*/})'

# Statusbar theme for X sessions or tty.
# if-shell '[ -n "$DISPLAY" ] && [ -f ~/.tmux/seoul256-powerline.tmux ]' 'source ~/.tmux/seoul256-powerline.tmux'

# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------
# Use fzf to select pane
bind-key 0 run-shell "tmux split-window -l 12 'bash -c \"source ~/.bash_aliases; ftpane\"'"

# -------------------------------------------------------------------
# Plugins
# -------------------------------------------------------------------
# List of plugins
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-sensible'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'tmux-plugins/tmux-yank'
set-option -g @plugin 'tmux-plugins/tmux-fpp'
# set-option -g @plugin 'tmux-plugins/tmux-copycat' # disable to avoid 'n' being slowed
set-option -g @plugin 'laktak/extrakto'
set-option -g @plugin 'egel/tmux-gruvbox'

# Other examples:
# set-option -g @plugin 'github_username/plugin_name'
# set-option -g @plugin 'git@github.com/user/plugin'
# set-option -g @plugin 'git@bitbucket.com/user/plugin'

# extrakto options
set-option -g @extrakto_key '`'
set-option -g @extrakto_split_size 15

# tmux-auto, not on github
# if-shell '[ -f ~/.tmux/plugins/tmux-auto/tmux-auto.tmux ]' 'source ~/.tmux/plugins/tmux-auto/tmux-auto.tmux'
bind-key e run-shell "tmux split-window -v \"PANE='#{pane_id}' ~/.tmux/plugins/tmux-auto/list_scripts_and_exec.sh\""

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run-shell '~/.tmux/plugins/tpm/tpm'
